# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pytest-datadir
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest

  coverage:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-datadir "genbadge[all]" coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Pytest
      run: |
        pytest --junitxml=reports/junit/junit.xml
    - name: Coverage
      run: |
        coverage run -m pytest
        coverage xml -o reports/coverage/coverage.xml
    - name: Badges
      run: |
        genbadge coverage -o docs/badges/coverage-badge.svg
        genbadge tests -o docs/badges/test.svg

  test-pypi-publish:
    name: Upload release to TestPyPI
    runs-on: ubuntu-latest
    needs: [build, coverage]  # Ensures this runs after your build and test jobs
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')  # Runs for tagged commits only
    permissions:
      id-token: write  # Mandatory for trusted publishing

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.11

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        python -m pip install build  # Install package building tools

    - name: Build package
      run: |
        python -m build  # Build your package

    - name: Publish package distributions to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
      # Authentication handled via OIDC
      